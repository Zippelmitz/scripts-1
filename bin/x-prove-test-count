#!/usr/bin/env perl
#
# TAP::Harness (the module prove uses to keep track of total tests)
# doesn't understand subtests, so it doesn't count them.
# 
# The final report test count is only for top-level test count. Most of
# the time, this is quite enough, but sometimes you want to know the
# full test count.
#
# That's what this script does.
#
# You can run it in two ways:
#
# As a command, it will run prove for you, forcing -v (required for this
# to work) and passes on all the extra parameters you give it
#
#      x-prove-test-count x-prove-test-count -l --state=save
#
# Alternatively you can run it as a filter:
# 
#      prove -lv | x-prove-test-count
# 
# Just don't forget to enable -v!
# 
# Pedro Melo <melo@simplicidade.org>, at 2011/01/29

use strict;
use warnings;

my $total = 0;

my $prove_fh;
if (-t \*STDIN) {
  ## Open and list form: only works on fork()-able OS's, so no Windows for you...
  open($prove_fh, '-|', 'prove', '-v', @ARGV);
}
else {
  $prove_fh = \*STDIN;
}

$|++;
while (<$prove_fh>) {
  print;
  $total += $1 if m/^\s*1[.][.](\d+)\s*$/;
}

END { print "*** Total tests seen: $total\n" }
