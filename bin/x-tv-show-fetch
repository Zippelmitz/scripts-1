#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long;
use LWP::UserAgent;

my %opts = load_config();
GetOptions(\%opts, 'user=s', 'password=s') or usage(2);
usage() unless $opts{user} && $opts{password} && $opts{password};
usage() unless @ARGV;

my $base = "http://$opts{host}/series";

for my $e (@ARGV) {
  my ($show, $season) = $e =~ m/(.+)-(\d+)x/;

  fetch($e, "$base/$show/season_$season/$e");
}


sub fetch {
  my ($file, $url) = @_;
  my $fh;

  my $ua = LWP::UserAgent->new;
  $ua->env_proxy;
  $ua->credentials("$opts{host}:80", 'Series TV', $opts{user}, $opts{password});
  $ua->from($opts{email}) if $opts{email};
  $ua->show_progress(1);

  my $res = $ua->mirror($url, $file);
  print STDERR "ERROR: failed '$url' - " . $res->status_line . "\n"
    unless $res->is_success;
}

sub usage {
  print STDERR "Usage: fetch.pl -u <user> -p <password> episode+\n";
  exit(shift || 1);
}

sub load_config {
  my $opts;

  my $file = "$ENV{HOME}/.tvshows_rc";
  open(my $cfg, '<', $file) || return;
  while (my $l = <$cfg>) {
    chomp($l);
    $l =~ s/^\s+|\s+$//;
    next unless $l;
    next if $l =~ /^#/;

    my ($command, $value) = $l =~ /^(\S+)(?:\s+(.+))?$/;
    die "Unparseable line $. on $file: $l\n" unless $command;
    
    print "'$command' '$value' via '$l'\n";

    $value = '' unless defined $value;
    $value =~ s/^(["'])(.*)\1$/$2/;

    $opts{$command} = $value;
  }

  return %opts;
}
