#!/usr/bin/env perl

use strict;
use warnings;
use Getopt::Long;
use LWP::UserAgent;

my %opts = load_config();
GetOptions(\%opts, 'user=s', 'password=s') or usage(2);
usage() unless $opts{user} && $opts{password} && $opts{password};
usage() unless @ARGV;

my $base = "http://$opts{user}:$opts{password}\@$opts{host}/series";

@ARGV = grep { $_ } map { s/^\s+|\s+$//g; $_ } grep { /^[^#]/ } <STDIN>
  if $ARGV[0] eq '-';

for my $e (@ARGV) {
  my ($show, $season) = $e =~ m/(.+)-(\d+)x/;

  fetch($e, "$base/$show/season_$season/$e");
}

sub fetch {
  print "\n*** Fetching $_[-1]\n";
  system(qw(curl -L -C - -O ), $_[-1]);
}

sub usage {
  print STDERR <<EOUSAGE;
Usage: fetch.pl -u <user> -p <password> episode+

Don't forget to create a ~/.tvshows_rc file like this:

------- 8< ------------
#
# Access to my TV service
#

host my.tvservice.host.here
user my_username
password my_password
------- 8< ------------
EOUSAGE

  exit(shift || 1);
}

sub load_config {
  my $opts;

  my $file = "$ENV{HOME}/.tvshows_rc";
  open(my $cfg, '<', $file) || return;
  while (my $l = <$cfg>) {
    chomp($l);
    $l =~ s/^\s+|\s+$//;
    next unless $l;
    next if $l =~ /^#/;

    my ($command, $value) = $l =~ /^(\S+)(?:\s+(.+))?$/;
    die "Unparseable line $. on $file: $l\n" unless $command;
    
    $value = '' unless defined $value;
    $value =~ s/^(["'])(.*)\1$/$2/;

    $opts{$command} = $value;
  }

  return %opts;
}
